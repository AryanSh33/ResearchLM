import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:provider/provider.dart';
import 'providers/theme_provider.dart';
import 'providers/chat_provider.dart';
import 'providers/auth_provider.dart';
import 'screens/chat_screen.dart';
import 'screens/login_screen.dart';
import 'firebase_options.dart'; // Generated by Firebase CLI

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  try {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  } catch (e) {
    print('Firebase initialization error: $e');
  }

  runApp(const ResearchLMApp());
}

class ResearchLMApp extends StatelessWidget {
  const ResearchLMApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => ThemeProvider()),
        ChangeNotifierProvider(create: (_) => AuthProvider()),
        ChangeNotifierProvider(create: (_) => ChatProvider()),
      ],
      child: Consumer<ThemeProvider>(
        builder: (context, themeProvider, child) {
          return MaterialApp(
            title: 'ResearchLM',
            debugShowCheckedModeBanner: false,
            theme: ThemeData(
              useMaterial3: true,
              colorScheme: ColorScheme.fromSeed(
                seedColor: const Color(0xFF10A37F),
                brightness: Brightness.light,
              ),
              fontFamily: 'Noto Sans JP', // Changed to Noto Sans Japanese
              appBarTheme: AppBarTheme(
                toolbarHeight: 80, // Increased AppBar height globally
                centerTitle: false,
                elevation: 0,
                scrolledUnderElevation: 1,
                titleTextStyle: TextStyle(
                  fontFamily: 'Noto Sans JP',
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                  color: Colors.white,
                ),
                iconTheme: const IconThemeData(
                  color: Colors.white,
                  size: 24,
                ),
              ),
              textTheme: TextTheme(
                displayLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                displayMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                displaySmall: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineSmall: TextStyle(fontFamily: 'Noto Sans JP'),
                titleLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                titleMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                titleSmall: TextStyle(fontFamily: 'Noto Sans JP'),
                bodyLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                bodyMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                bodySmall: TextStyle(fontFamily: 'Noto Sans JP'),
                labelLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                labelMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                labelSmall: TextStyle(fontFamily: 'Noto Sans JP'),
              ),
            ),
            darkTheme: ThemeData(
              useMaterial3: true,
              colorScheme: ColorScheme.fromSeed(
                seedColor: const Color(0xFF10A37F),
                brightness: Brightness.dark,
              ),
              fontFamily: 'Noto Sans JP', // Changed to Noto Sans Japanese
              appBarTheme: AppBarTheme(
                toolbarHeight: 80, // Increased AppBar height globally
                centerTitle: false,
                elevation: 0,
                scrolledUnderElevation: 1,
                titleTextStyle: TextStyle(
                  fontFamily: 'Noto Sans JP',
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                  color: Colors.white,
                ),
                iconTheme: const IconThemeData(
                  color: Colors.white,
                  size: 24,
                ),
              ),
              textTheme: TextTheme(
                displayLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                displayMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                displaySmall: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                headlineSmall: TextStyle(fontFamily: 'Noto Sans JP'),
                titleLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                titleMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                titleSmall: TextStyle(fontFamily: 'Noto Sans JP'),
                bodyLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                bodyMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                bodySmall: TextStyle(fontFamily: 'Noto Sans JP'),
                labelLarge: TextStyle(fontFamily: 'Noto Sans JP'),
                labelMedium: TextStyle(fontFamily: 'Noto Sans JP'),
                labelSmall: TextStyle(fontFamily: 'Noto Sans JP'),
              ),
            ),
            themeMode: themeProvider.themeMode,
            home: Consumer<AuthProvider>(
              builder: (context, authProvider, child) {
                if (authProvider.isLoading) {
                  return const Scaffold(
                    body: Center(
                      child: CircularProgressIndicator(),
                    ),
                  );
                }

                if (authProvider.user == null) {
                  return const LoginScreen();
                }
                return const ChatScreen();
              },
            ),
          );
        },
      ),
    );
  }
}